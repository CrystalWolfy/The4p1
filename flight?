local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local flying = false
local speed = 50 -- Speed of flying

-- Function to toggle flying
local function toggleFly()
    flying = not flying
    local character = LocalPlayer.Character
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if flying then
        humanoid.PlatformStand = true -- Prevents character from falling
        while flying do
            wait(0.1)
            -- Update the character's position based on key input
            local direction = Vector3.new(0, 0, 0)

            if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + workspace.CurrentCamera.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - workspace.CurrentCamera.CFrame.LookVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - workspace.CurrentCamera.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + workspace.CurrentCamera.CFrame.RightVector
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                direction = direction + Vector3.new(0, 1, 0) -- Fly up
            end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                direction = direction - Vector3.new(0, 1, 0) -- Fly down
            end
            
            character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame + (direction.Unit * speed * 0.1) -- Move the character
        end
    else
        humanoid.PlatformStand = false -- Restore normal behavior
    end
end

-- Bind the fly toggle to a key press (e.g., F key)
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.F then
        toggleFly()
    end
end)
